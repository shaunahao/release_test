name: Tagging Example

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - main
  # # pull_request event is required only for autolabeler
  # pull_request:
  #   # Only following types are handled by the action, but one can default to all as well
  #   types: [opened, reopened, synchronize]

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Create a Github Tag and Release
        id: create_release
        uses: release-drafter/release-drafter@v5.15.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish: true
      - name: Create New Relic deployment marker
        uses: newrelic/deployment-marker-action@v1
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          accountId: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
          applicationId: ${{ secrets.NEW_RELIC_APPLICATION_ID }}
          # outputs of create_release can be used to update the revision and changelog
          revision: ${{ steps.create_release.outputs.tag_name }}
          changelog: ${{ steps.create_release.outputs.body }}}
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ always() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: "#qe-infra-alerts"
          SLACK_USERNAME: "Release Test"
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || '#E01E5A'}}
          SLACK_TITLE: deployed ${{ steps.create_release.outputs.tag_name }}
          SLACK_MESSAGE: Please check more info in ${{ steps.create_release.outputs.html_url }}}
